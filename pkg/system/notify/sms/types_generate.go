// Code generated by github.com/infraboard/mcube
// DO NOT EDIT

package sms

import (
	"bytes"
	"fmt"
	"strings"
)

var (
	enumProviderShowMap = map[Provider]string{
		ProviderTenCent: "tencent",
		ProviderALI:     "ali",
	}

	enumProviderIDMap = map[string]Provider{
		"tencent": ProviderTenCent,
		"ali":     ProviderALI,
	}
)

// ParseProvider Parse Provider from string
func ParseProvider(str string) (Provider, error) {
	key := strings.Trim(string(str), `"`)
	v, ok := enumProviderIDMap[key]
	if !ok {
		return 0, fmt.Errorf("unknown Status: %s", str)
	}

	return v, nil
}

// Is todo
func (t Provider) Is(target Provider) bool {
	return t == target
}

// String stringer
func (t Provider) String() string {
	v, ok := enumProviderShowMap[t]
	if !ok {
		return "unknown"
	}

	return v
}

// MarshalJSON todo
func (t Provider) MarshalJSON() ([]byte, error) {
	b := bytes.NewBufferString(`"`)
	b.WriteString(t.String())
	b.WriteString(`"`)
	return b.Bytes(), nil
}

// UnmarshalJSON todo
func (t *Provider) UnmarshalJSON(b []byte) error {
	ins, err := ParseProvider(string(b))
	if err != nil {
		return err
	}
	*t = ins
	return nil
}
