// Code generated by github.com/infraboard/mcube
// DO NOT EDIT

package audit

import (
	"bytes"
	"fmt"
	"strings"
)

var (
	enumResultShowMap = map[Result]string{
		Success: "success",
		Failed:  "failed",
	}

	enumResultIDMap = map[string]Result{
		"success": Success,
		"failed":  Failed,
	}
)

// ParseResult Parse Result from string
func ParseResult(str string) (Result, error) {
	key := strings.Trim(string(str), `"`)
	v, ok := enumResultIDMap[key]
	if !ok {
		return 0, fmt.Errorf("unknown Status: %s", str)
	}

	return v, nil
}

// Is todo
func (t Result) Is(target Result) bool {
	return t == target
}

// String stringer
func (t Result) String() string {
	v, ok := enumResultShowMap[t]
	if !ok {
		return "unknown"
	}

	return v
}

// MarshalJSON todo
func (t Result) MarshalJSON() ([]byte, error) {
	b := bytes.NewBufferString(`"`)
	b.WriteString(t.String())
	b.WriteString(`"`)
	return b.Bytes(), nil
}

// UnmarshalJSON todo
func (t *Result) UnmarshalJSON(b []byte) error {
	ins, err := ParseResult(string(b))
	if err != nil {
		return err
	}
	*t = ins
	return nil
}
